version: '3.9'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: service_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - adonis_service_network
  kafka:
    image: wurstmeister/kafka:latest
    container_name: service_kafka
    depends_on:
      - zookeeper
    environment:
      # KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: users:1:1
    ports:
      - 9094:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - adonis_service_network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --topic users --describe"]
      interval: 2s
      timeout: 6s
      retries: 15
  kafdrop:
    container_name: service_kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - adonis_service_network
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
  service_users:
    container_name: service_users
    restart: always
    build:
      context: ./service-users
      dockerfile: Dockerfile
    env_file:
      - ./service-users/.env
    ports:
      - "3333:3333"
    volumes:
      - "./service-users:/home/node/app:rw"
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - sh
      - -c
      - "npm install && chmod 777 -R ./node_modules && npm run dev"
    networks:
      - adonis_service_network
  service_logs:
    container_name: service_logs
    restart: always
    build:
      context: ./service-logs
      dockerfile: Dockerfile
    env_file:
      - ./service-logs/.env
    ports:
      - "3334:3334"
    volumes:
      - "./service-logs:/home/node/app:rw"
    depends_on:
      kafka:
        condition: service_healthy
    command:
      - sh
      - -c
      - "npm install && chmod 777 -R ./node_modules && npm run dev"
    networks:
      - adonis_service_network
networks:
  adonis_service_network:

